# Data Types and Operators

## Key Concepts

- Numbers
- Strings
- Lists

## Explanations

Python has several built-in data types, including numbers, strings, and lists. Numbers can be either integers or floating-point numbers, and they can be used to perform arithmetic operations. Strings are sequences of characters, and they can be used to represent text. Lists are ordered collections of values, and they can be used to store and manipulate data.

## Examples

- Assigning a number to a variable: x = 5
- Assigning a string to a variable: name = 'John'
- Assigning a list to a variable: numbers = [1, 2, 3, 4, 5]

## Summary Points

- Python has several built-in data types, including numbers, strings, and lists
- Numbers can be either integers or floating-point numbers
- Strings are sequences of characters
- Lists are ordered collections of values
- Operators can be used to perform operations on data types

## Self-Assessment Questions

Q: What is the difference between an integer and a floating-point number in Python?
A: An integer is a whole number, while a floating-point number is a number with a fractional part.

Q: How do you assign a string to a variable in Python?
A: You assign a string to a variable using quotes, such as name = 'John'.

Q: What is the purpose of the indexing operator ([]) in Python?
A: The indexing operator is used to access elements of a list or other sequence.

