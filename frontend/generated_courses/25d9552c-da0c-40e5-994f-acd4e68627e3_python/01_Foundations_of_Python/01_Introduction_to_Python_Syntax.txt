# Introduction to Python Syntax

## Key Concepts

- Indentation
- Variables
- Operators

## Explanations

Python syntax is the set of rules that defines how to write Python code. One of the key aspects of Python syntax is indentation, which is used to define the structure of the code. In Python, indentation is used to indicate block-level structure, such as in loops and conditional statements. Variables are used to store and manipulate data in Python, and they can be assigned a value using the assignment operator. Operators are used to perform operations on variables and values, such as arithmetic operations and comparison operations. Python syntax is designed to be easy to read and write, with a focus on clarity and simplicity.

## Examples

- Assigning a value to a variable: x = 5
- Using indentation to define a block of code: if x > 5: print('x is greater than 5')
- Using operators to perform an operation: x = 5 + 3

## Summary Points

- Python syntax is defined by a set of rules that determine how to write Python code
- Indentation is used to define the structure of Python code
- Variables are used to store and manipulate data in Python
- Operators are used to perform operations on variables and values
- Python syntax is case-sensitive

## Self-Assessment Questions

Q: What is the purpose of indentation in Python syntax?
A: Indentation is used to define the structure of Python code, such as in loops and conditional statements.

Q: How do you assign a value to a variable in Python?
A: You assign a value to a variable using the assignment operator (=), such as x = 5.

Q: What is the difference between the keywords 'if' and 'If' in Python?
A: The keyword 'if' is written in lowercase, while 'If' is written in uppercase. Python syntax is case-sensitive, so 'if' and 'If' are treated as different keywords.

